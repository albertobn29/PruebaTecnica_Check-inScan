{
	"info": {
		"_postman_id": "a4899296-bd9e-4915-bc36-87e7efc618cc",
		"name": "PruebaTecnica_Check-inScan",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16328735"
	},
	"item": [
		{
			"name": "GET TOKEN",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/getToken",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"getToken"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET PRODUCTOS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/productos",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "GET PRODUCTO",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/producto/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"producto",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "CREAR PRODUCTO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"titulo\": \"Mollete\",\n    \"descripcion\": \"Panecillo de forma ovalada, esponjado y de poca cochura, ordinariamente blanco.\",\n    \"estado\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/createProducto",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"createProducto"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "MODIFICAR PRODUCTO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"estado\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/updateProducto/2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"updateProducto",
						"2"
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "BORRAR PRODUCTO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/deleteProducto/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"deleteProducto",
						"1"
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtc2ciOiJ0b2tlbiBkZSBhdXRlbnRpY2FjaW9uIiwiaWF0IjoxNzExNTU1MjI4LCJleHAiOjE3MTE2NDE2Mjh9.kVLfKVQ5queSelhEH1pBxzp6YKd-m8XX6Uc9TEvaI9c",
				"type": "string"
			},
			{
				"key": "key",
				"value": "token",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1",
			"disabled": true
		},
		{
			"key": "base_url",
			"value": "http://localhost:3500/api/"
		}
	]
}